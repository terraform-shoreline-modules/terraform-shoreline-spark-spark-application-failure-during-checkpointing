{
  "name": "spark_application_failure_during_checkpointing",
  "description": "This incident type refers to a problem in a Spark application where it fails during the checkpointing process. Checkpointing is an important feature of Spark applications that allows for fault tolerance and recovery. When a checkpoint fails, it can cause data loss and potentially lead to application failure. This type of incident requires investigation to determine the root cause and implement a solution to prevent it from happening again.",
  "params": [
    {
      "name": "SPARK_APPLICATION_NAME",
      "value": ""
    },
    {
      "name": "CHECKPOINTING_DIRECTORY",
      "value": ""
    },
    {
      "name": "PATH_TO_SPARK_APP",
      "value": ""
    },
    {
      "name": "SPARK_APPLICATION_CONFIG_FILE",
      "value": ""
    },
    {
      "name": "SPARK_APPLICATION_LOG_FILE",
      "value": ""
    },
    {
      "name": "AMOUNT_OF_RESOURCES_TO_ALLOCATE",
      "value": ""
    },
    {
      "name": "DRIVER_MEMORY",
      "value": ""
    },
    {
      "name": "EXECUTOR_MEMORY",
      "value": ""
    },
    {
      "name": "HOST_NAME",
      "value": ""
    },
    {
      "name": "K8S_CLUSTER_NAME",
      "value": ""
    },
    {
      "name": "NAMESPACE",
      "value": ""
    }
  ],
  "cells": [
    {
      "name": "cell_1",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Spark application failure during checkpointing.\nThis incident type refers to a problem in a Spark application where it fails during the checkpointing process. Checkpointing is an important feature of Spark applications that allows for fault tolerance and recovery. When a checkpoint fails, it can cause data loss and potentially lead to application failure. This type of incident requires investigation to determine the root cause and implement a solution to prevent it from happening again."
    },
    {
      "name": "cell_2",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if Spark application is running"
    },
    {
      "name": "cell_3",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `ps aux | grep ${SPARK_APPLICATION_NAME}`"
    },
    {
      "name": "cell_4",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the status of Spark application"
    },
    {
      "name": "cell_5",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `sudo systemctl status ${SPARK_APPLICATION_NAME}`"
    },
    {
      "name": "cell_6",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if there are any logs generated by Spark"
    },
    {
      "name": "cell_7",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `sudo tail -f /var/log/${SPARK_APPLICATION_LOG_FILE}`"
    },
    {
      "name": "cell_8",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if Spark is using the correct checkpointing directory"
    },
    {
      "name": "cell_9",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `grep \"spark.checkpoint.dir\" ${SPARK_APPLICATION_CONFIG_FILE}`"
    },
    {
      "name": "cell_10",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if there is enough disk space in the checkpointing directory"
    },
    {
      "name": "cell_11",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `df -h ${CHECKPOINTING_DIRECTORY}`"
    },
    {
      "name": "cell_12",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if the Spark checkpointing directory has the correct permissions"
    },
    {
      "name": "cell_13",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `ls -l ${CHECKPOINTING_DIRECTORY}`"
    },
    {
      "name": "cell_14",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if the Spark application is configured to use enough memory"
    },
    {
      "name": "cell_15",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `grep \"spark.driver.memory\" ${SPARK_APPLICATION_CONFIG_FILE}`"
    },
    {
      "name": "cell_16",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if the Spark application is configured to use enough cores"
    },
    {
      "name": "cell_17",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `grep \"spark.driver.cores\" ${SPARK_APPLICATION_CONFIG_FILE}`"
    },
    {
      "name": "cell_18",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if the Spark application is using the correct version of Java"
    },
    {
      "name": "cell_19",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `java -version`"
    },
    {
      "name": "cell_20",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Insufficient memory allocation for the Spark application, leading to checkpointing failures."
    },
    {
      "name": "cell_21",
      "type": "OP_LANG",
      "enabled": true,
      "content": "host | host_name=$HOST_NAME | invoke_memory_allocation($SPARK_APPLICATION_NAME, $PATH_TO_SPARK_APP, $DRIVER_MEMORY, $EXECUTOR_MEMORY)"
    },
    {
      "name": "cell_22",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Increase the resources allocated to the Spark application to mitigate potential resource contention issues."
    },
    {
      "name": "cell_23",
      "type": "OP_LANG",
      "enabled": true,
      "content": "host | host_name=$HOST_NAME | invoke_update_spark_resources($SPARK_APPLICATION_NAME, $SPARK_APPLICATION_CONFIG_FILE, $AMOUNT_OF_RESOURCES_TO_ALLOCATE)"
    }
  ]
}